import{at as S,au as b,av as A}from"./index-CE6wyhGh.js";class f{static set(e,t,r){const n=Date.now()+r*1e3;localStorage.setItem(e,JSON.stringify({value:t,expires:n}))}static get(e){const t=JSON.parse(localStorage.getItem(e)||"null");return t&&t.expires>Date.now()?t.value:(this.remove(e),null)}static remove(e){localStorage.removeItem(e)}static has(e){return!!this.get(e)}}function x(a,e,t){const r=a.width/a.height,n=e/t;let i,c;r>n?(i=e,c=e/r):(c=t,i=t*r);const l=(e-i)/2,m=(t-c)/2;return{dx:l,dy:m,drawWidth:i,drawHeight:c}}async function E(a){let e=f.get("img_"+a);return e===null&&(e=await S(a),e&&f.set("img_"+a,e,10*60)),e}async function L(a,e){const t=await b(a,e);return f.remove("img_"+a),t}async function P(a){console.log("delImage",a);const e=await A(a);return f.remove("img_"+a),e}async function U(a,e,t){return new Promise(r=>{const n=document.createElement("input");n.type="file",n.accept="image/*",n.addEventListener("change",async i=>{var m;const c=(m=i.target)==null?void 0:m.files[0];if(!c){r(null);return}const l=new FileReader;l.onload=p=>{const I=p.target.result,o=new Image;o.src=I,o.onload=()=>{t===void 0&&(t=o.width),e===void 0&&(e=o.height);const{drawWidth:g,drawHeight:d}=x(o,t,e),s=document.createElement("canvas");s.width=g,s.height=d,console.log("canvas",d,g);const u=s.getContext("2d");if(!u){r(null);return}u.clearRect(0,0,t,e),u.drawImage(o,0,0,g,d),s.toBlob(y=>{const w=new FileReader;w.onload=async()=>{const R=w.result,h=await L(a,R);return r(parseInt(h))},w.readAsDataURL(y)},"image/webp")}},l.readAsDataURL(c)}),n.click()})}async function F(a,e,t){return new Promise(r=>{const n=document.createElement("input");n.type="file",n.accept="image/*",n.capture="camera",n.addEventListener("change",async i=>{var m;const c=(m=i.target)==null?void 0:m.files[0];if(!c){r(null);return}const l=new FileReader;l.onload=p=>{const I=p.target.result,o=new Image;o.src=I,o.onload=()=>{t===void 0&&(t=o.width),e===void 0&&(e=o.height);const{drawWidth:g,drawHeight:d}=x(o,t,e),s=document.createElement("canvas");s.width=g,s.height=d,console.log("canvas",d,g);const u=s.getContext("2d");if(!u){r(null);return}u.clearRect(0,0,t,e),u.drawImage(o,0,0,g,d),s.toBlob(y=>{const w=new FileReader;w.onload=async()=>{const R=w.result,h=await L(a,R);return r(parseInt(h))},w.readAsDataURL(y)},"image/webp")}},l.readAsDataURL(c)}),n.click()})}export{x as a,F as c,P as d,E as g,U as l};
